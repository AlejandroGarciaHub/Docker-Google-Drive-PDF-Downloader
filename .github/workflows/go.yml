# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "master" ]
#  pull_request:
#    branches: [ "master" ]

env:
  DATA_SHARETOKEN: ${{secrets.DATA_SHARETOKEN}}
  DATA_FILENAME: ${{secrets.DATA_FILENAME}}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.20'

    - name: Test
      run: ls -la
    - name: Download Data
      run: curl -u $DATA_SHARETOKEN:$DATA_SHARETOKEN -H X-Requested-With:XMLHttpRequest https://cloud.alejandrohub.dev/public.php/webdav/ --output $DATA_FILENAME.zip
    - name: Test
      run: ls -la
    - name: Unzip
      run: unzip $DATA_FILENAME.zip -d $DATA_FILENAME
    - name: Test
      run: ls -la
    - name: Test
      run: ls -la $DATA_FILENAME
    - name: Copy Data to Input
      run: cp $DATA_FILENAME/$DATA_FILENAME Generate_PDF/Input/$DATA_FILENAME
    - name: Test
      run: ls -la Generate_PDF/Input/
    - name: Chmod +x GeneratePDF
      run: chmod +x Generate_PDF/Linux/GeneratePDF
    - name: CD Linux
      run: cd Generate_PDF/Linux
    - name: Run GeneratePDF
      run: ./GeneratePDF



#    - name: Test
#      run: go test -v ./...
